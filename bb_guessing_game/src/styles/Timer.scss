@import './colors';


// From https://css-tricks.com/how-to-create-an-animated-countdown-timer-with-html-css-and-javascript/

/* Sets the containers height and width */
.base-timer {
    margin: 0 auto;
    position: relative;
    height: 200px;
    width: 200px;
  }
  
  /* Removes SVG styling that would hide the time label */
  .base-timer__circle {
    fill: none;
    stroke: none;
  }
  
  /* The SVG path that displays the timer's progress */
  .base-timer__path-elapsed {
    stroke-width: 7px;
    stroke: grey;
  }

  .base-timer__label {
    position: absolute;
    
    /* Size should match the parent container */
    width: 200px;
    height: 200px;
    
    /* Keep the label aligned to the top */
    top: 0;
    
    /* Create a flexible box that centers content vertically and horizontally */
    display: flex;
    align-items: center;
    justify-content: center;
  
    /* Sort of an arbitrary number; adjust to your liking */
    font-size: 48px;
  }


  .base-timer__path-remaining {
    /* Just as thick as the original ring */
    stroke-width: 7px;
  
    /* Rounds the line endings to create a seamless circle */
    stroke-linecap: round;
  
    /* Makes sure the animation starts at the top of the circle */
    transform: rotate(90deg);
    transform-origin: center;
  
    /* One second aligns with the speed of the countdown timer */
    transition: 1s linear all;
  
    /* Allows the ring to change color when the color value updates */
    stroke: currentColor;
  }
  
  .base-timer__svg {
    /* Flips the svg and makes the animation to move left-to-right */
    transform: scaleX(-1);
  }




  

  .inner-circle{
    z-index: 2;

    /* Makes sure the animation starts at the top of the circle */
    transform: rotate(90deg);
    transform-origin: center;
  
    /* One second aligns with the speed of the countdown timer */
    transition: 0.5s linear all;
  
    /* Allows the ring to change color when the color value updates */
    stroke: currentColor;


    stroke-dasharray: 283px;
    stroke-dashoffset: 0px;
    stroke-linecap: round;
    stroke-width: 7px;
    fill: none;


    &.easy{
      animation: countdown 21s linear infinite forwards;
  
    }
    &.hard{
      animation: countdown 6s linear infinite forwards;
    }
  
    &.medium{
      animation: countdown 11s linear infinite forwards;
    }


  }



  
  
  @keyframes countdown {
    from {
      stroke-dashoffset: 0px;
    }
    to {
      stroke-dashoffset: 283px;
    }
  }







//   Colors 
.green{
    stroke: $primary-green-light;
}


.yellow{
  stroke: $primary-yellow;
}

.red{
  stroke: red;
}

.blue{
    stroke: $primary-blue;
}




// Very small devices
@media (min-width: 320px){

}

@media (min-width: 374px){

}

// Small devices (landscape phones, 576px and up)
@media (min-width: 480px) {
 
}


@media (min-width: 480px) and (orientation:landscape) {
  .base-timer {
    height: 125px;
    width: 125px;
  }

  .base-timer__label {
    width: 125px;
    height: 125px;
    font-size: 1.5rem;

  }


}



// Medium devices (tablets, 768px and up)
@media (min-width: 768px) { 
  .base-timer {
    height: 225px;
    width: 225px;
  }

  .base-timer__label {
    width: 225px;
    height: 225px;
    font-size: 3rem;

  }

}

@media (max-width: 813px) and (max-height: 416px) and (orientation:landscape) {
  .base-timer {
    height: 150px;
    width: 150px;
  }

  .base-timer__label {
    width: 150px;
    height: 150px;
    font-size: 1.5rem;

  }
}

@media (max-width: 569px) and (orientation:landscape) {
  .base-timer {
    height: 130px;
    width: 130px;
  }

  .base-timer__label {
    width: 130px;
    height: 130px;
    font-size: 1.5rem;

  }
}




// Large devices (desktops, 992px and up)
@media (min-width: 992px) { 

  // .base-timer {
  //   height: 350px;
  //   width: 350px;
  // }

  // .base-timer__label {
  //   width: 350px;
  //   height: 350px;
  //   font-size: 4.5rem;

  // }
}





// Extra large devices (large desktops, 1200px and up)
@media (min-width: 1200px) { 
  
}